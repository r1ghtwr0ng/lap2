name: Elixir CI Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  elixir_ci:
    name: Elixir CI
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install -y protobuf-compiler

    - name: Install Erlang/OTP + Elixir
      id: setup-beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14.4'
        otp-version: '24.2.1'
        # install-hex: true (default)
        # install-rebar: true (default)
      # outputs: ${steps.setup-beam.outputs.(opt, elixir, rebar3)-version} (exact version installed)        

    - name: Restore dependency/build cache
      uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        # cache key is hierarchical: OS, otp-version, elixir-version, mix.lock
        key: ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        # restore keys are tried on cache misses, and only match the key prefix
        restore-keys: |
          ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-
          ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-
          ${{ runner.os }}-mix-
        
    - name: Dependencies
      run: |
        mix deps.get
        mix deps.compile

    - name: Code
      run: |
        mix compile
 
    - name: Test
      run: |
        mix test

    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: doc-cover
        path: |
          doc
          cover
